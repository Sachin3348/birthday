:root {
  --max-width: 1100px;
  --border-radius: 12px;
  --font-mono: ui-monospace, Menlo, Monaco, 'Cascadia Mono', 'Segoe UI Mono',
    'Roboto Mono', 'Oxygen Mono', 'Ubuntu Monospace', 'Source Code Pro',
    'Fira Mono', 'Droid Sans Mono', 'Courier New', monospace;

  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;

  --primary-glow: conic-gradient(
    from 180deg at 50% 50%,
    #16abff33 0deg,
    #0885ff33 55deg,
    #54d6ff33 120deg,
    #0071ff33 160deg,
    transparent 360deg
  );
  --secondary-glow: radial-gradient(
    rgba(255, 255, 255, 1),
    rgba(255, 255, 255, 0)
  );

  --tile-start-rgb: 239, 245, 249;
  --tile-end-rgb: 228, 232, 233;
  --tile-border: conic-gradient(
    #00000080,
    #00000040,
    #00000030,
    #00000020,
    #00000010,
    #00000010,
    #00000080
  );

  --callout-rgb: 238, 240, 241;
  --callout-border-rgb: 172, 175, 176;
  --card-rgb: 180, 185, 188;
  --card-border-rgb: 131, 134, 135;
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;

    --primary-glow: radial-gradient(rgba(1, 65, 255, 0.4), rgba(1, 65, 255, 0));
    --secondary-glow: linear-gradient(
      to bottom right,
      rgba(1, 65, 255, 0),
      rgba(1, 65, 255, 0),
      rgba(1, 65, 255, 0.3)
    );

    --tile-start-rgb: 2, 13, 46;
    --tile-end-rgb: 2, 5, 19;
    --tile-border: conic-gradient(
      #ffffff80,
      #ffffff40,
      #ffffff30,
      #ffffff20,
      #ffffff10,
      #ffffff10,
      #ffffff80
    );

    --callout-rgb: 20, 20, 20;
    --callout-border-rgb: 108, 108, 108;
    --card-rgb: 100, 100, 100;
    --card-border-rgb: 200, 200, 200;
  }
}

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

html,
body {
  /* max-width: 100vw; */
  overflow-x: hidden;
}

body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(
      to bottom,
      transparent,
      rgb(var(--background-end-rgb))
    )
    rgb(var(--background-start-rgb));
}

a {
  color: inherit;
  text-decoration: none;
}

@media (prefers-color-scheme: dark) {
  html {
    color-scheme: dark;
  }
}

* {
  margin: 0;
  padding: 0;
}

html,
body {
  height: 100%;
  /* for touch screen */
  /* touch-action: none; */
}

body {
  /* overflow: hidden; */
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  /* background: #111; */

  -webkit-transform-style: preserve-3d;
  transform-style: preserve-3d;
}


.wrapper{
  display: flex;
  width: 100vw;
  height: 100vh;
  row-gap: 40px;
}


.photo {
  -webkit-transform-style: preserve-3d;
  transform-style: preserve-3d;
  
  /* position: absolute; */
  left: 0;
  top: 0;
  width: 80%;
  height: 100%;
  line-height: 400px;
  font-size: 50px;
  text-align: center;
  -webkit-box-shadow: 0 0 8px #fff;
  box-shadow: 0 0 8px #fff;
  -webkit-box-reflect: below 10px
  linear-gradient(transparent, transparent, #0005);
  transition: transform 0.9s ease-in-out;
  
}

.photo:hover{
  transform: scale(1.2);
  /* -webkit-box-shadow: 0 0 15px #fffd;
  box-shadow: 0 0 15px #fffd;
  -webkit-box-reflect: below 10px
  linear-gradient(transparent, transparent, #0007); */
  /* transform: scale3d(200%); */
}

#drag-container p {
  font-family: Serif;
  /* position: absolute; */
  top: 100%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%) rotateX(90deg);
  transform: translate(-50%, -50%) rotateX(90deg);
  color: #fff;
}

#ground {
  width: 900px;
  height: 900px;
  /* position: absolute; */
  top: 100%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%) rotateX(90deg);
  transform: translate(-50%, -50%) rotateX(90deg);
  background: -webkit-radial-gradient(
    center center,
    farthest-side,
    #9993,
    transparent
    );
  }
  
  @keyframes scroll {
    0% { transform:translateY(0%); }
    100% { transform: translateY(-100%); }
  }
  
  
  .drag-container{
    /* position: relative; */
    /* display: -webkit-box; */
    /* display: -ms-flexbox; */
    display: flex;
    margin: auto;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    row-gap:60vh;
    animation: scroll 100s linear infinite;
    /* animation-delay: 2s; */
    animation-fill-mode: both;
  
    /* background-color: red; */
  
    /* -webkit-transform-style: preserve-3d; */
    /* transform-style: preserve-3d; */
    /* -webkit-transform: rotateX(-10deg); */
    /* transform: rotateX(-20deg); */
  }

  .hoverme {
    /* width: 240px; */
    text-align: center;
    padding: 10px 0;
    cursor: pointer;
    position: relative;

    &:hover {
      @for $i from 1 through 50 {
        i:nth-of-type(#{$i}) {
          transform: translate3d(random(190) - 100 + px, random(200) - 100 + px, 0)
            rotate(random(360) + deg);
          background: hsla(random(360), 100%, 50%, 1);
          animation: bang 700ms ease-out forwards;
          opacity: 0;
        }
      }
    }
  }

  .hoverme h1 {
    color: #fff;
    font-size: 30px;
    background-image: linear-gradient(to right, red, black, red);
    position: fixed;

  }
  .hoverme i {
    position: absolute;
    display: block;
    left: 50%;
    top: 0;
    width: 5px;
    height: 10px;
    background: red;
    opacity: 0;
  }
  @keyframes bang {
    from {
      transform: translate3d(0, 0, 0);
      opacity: 1;
    }
  }

  .birthday{
    width: 100vw;
    position: absolute;
    text-align: center;
    top: 50%;
    position: fixed;
  }

  @media screen and (min-width : 1024px){

    .photo {
      -webkit-transform-style: preserve-3d;
      transform-style: preserve-3d;
      
      /* position: absolute; */
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      line-height: 400px;
      font-size: 50px;
      text-align: center;
      -webkit-box-shadow: 0 0 8px #fff;
      box-shadow: 0 0 8px #fff;
      -webkit-box-reflect: below 10px
      linear-gradient(transparent, transparent, #0005);
      transition: transform 0.9s ease-in-out;
      
    }

    .hoverme h1 {
      color: #fff;
      font-size: 50px;
      background-image: linear-gradient(to right, red, black, red);
      position: fixed;
  
    }
  
  }